version: '3'

services:
#  mysql56:
#    container_name: mysql56
#    build: $PWD/mysql5.6
#    restart: always
#    volumes:
#      - /srv/dockerData/mysql56:/var/lib/mysql
#    privileged: true
#    environment:
#      MYSQL_ROOT_PASSWORD: 123456
#    ports:
#      - 3307:3306
#    command:
#      - --sql-mode=NO_ENGINE_SUBSTITUTION
#    networks:
#      app_net:
#        ipv4_address: 172.16.238.2


  mysql57:
    container_name: mysql57
    build: $PWD/mysql5.7
    restart: always
    volumes:
      - $PWD/mysql5.7/mysql.conf.d/mysqld.cnf:/etc/mysql/mysql.conf.d/mysqld.cnf
      - /srv/dockerData/mysql:/var/lib/mysql
    privileged: true
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    ports:
      - 3306:3306
    command:
      - --sql-mode=NO_ENGINE_SUBSTITUTION
#      - --general-log=ON
#      - --general-log-file=/srv/web/logs/mysql.log
    networks:
      app_net:
        ipv4_address: 172.16.238.3

  mysql8:
    container_name: mysql8
    build: $PWD/mysql8
    restart: always
    volumes:
      - /srv/dockerData/mysql8:/var/lib/mysql
    privileged: true
    environment:
      MYSQL_ROOT_PASSWORD: 123456
    ports:
      - 3308:3306
    command:
      - --default-authentication-plugin=mysql_native_password
    #  - --sql-mode=NO_ENGINE_SUBSTITUTION
    #      - --general-log=ON
    #      - --general-log-file=/srv/web/logs/mysql.log
    networks:
      app_net:
        ipv4_address: 172.16.238.14

  nginx:
    container_name: nginx
    build: $PWD/nginx
    restart: always
    volumes:
      - /srv/web/www:/srv/web/www
      - $PWD/nginx/conf.d:/etc/nginx/conf.d
      - $PWD/nginx/nginx.conf:/etc/nginx/nginx.conf
    privileged: true
    ports:
      - 80:80
    # links:
#      - php56
      # - php71
      # - php72
    # depends_on:
#      - php56
      # - php71
      # - php72
    networks:
      app_net:
        ipv4_address: 172.16.238.8


  redis4:
    container_name: redis4
    build: $PWD/redis4.0
    restart: always
    command:
      - --appendonly yes
    volumes:
      - /srv/dockerData/redis:/data
    privileged: true
    ports:
      - 6379:6379
    networks:
      app_net:
        ipv4_address: 172.16.238.9

  mongo:
    container_name: mongo3.4
    image: mongo:3.4
    restart: always
    volumes:
      - /srv/dockerData/mongodbData:/data/db
    privileged: true
    ports:
      - '27017:27017'
    #    environment:
    #      MONGO_INITDB_ROOT_USERNAME: root
    #      MONGO_INITDB_ROOT_PASSWORD: 123456
    networks:
      app_net:
        ipv4_address: 172.16.238.10

  mongo-express:
    container_name: mongo-express
    image: mongo-express
    restart: always
    ports:
      - 8081:8081
    depends_on:
      - mongo
    privileged: true
    #    environment:
    #      ME_CONFIG_MONGODB_ADMINUSERNAME: root
    #      ME_CONFIG_MONGODB_ADMINPASSWORD: 123456
    networks:
      app_net:
        ipv4_address: 172.16.238.11

  portainer:
    container_name: portainer
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    privileged: true
    ports:
      - 9000:9000
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - portainer_data:/data
    networks:
      app_net:
        ipv4_address: 172.16.238.12

# 挂载
volumes:
  # composer-data:
    # external: true
  portainer_data:
    external: true

networks:
  app_net:
    external: true

# 网络配置
#networks:
#  lnmp_net:
#    driver: bridge
#    ipam:
#      driver: default
#      config:
#        - subnet: 172.16.238.0/24
